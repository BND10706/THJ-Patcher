name: Build and Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  VERSION: 1.0.6
  BUILD_CONFIGURATION: Release
  SERVER_NAME: "The Heroes Journey"
  FILE_NAME: "heroesjourneyeq"
  FILELIST_URL: "https://github.com/The-Heroes-Journey-EQEMU/eqemupatcher/releases/latest/download/"
  PATCHER_URL: "https://github.com/The-Heroes-Journey-EQEMU/eqemupatcher/releases/latest/download/"
  STORAGE_URL: "https://patch.heroesjourneyemu.com/rof/"
  BUILD_PATH: "EQEmu Patcher/EQEmu Patcher/bin/Release/net8.0-windows/win-x64"

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Install dependencies
      run: npm install

    - name: Generate manifest
      run: npm start

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1.3

    - name: Create directories
      shell: pwsh
      run: |
        New-Item -Path "rof" -ItemType Directory -Force
        New-Item -Path "${{env.BUILD_PATH}}" -ItemType Directory -Force

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: cd "EQEmu Patcher" && nuget restore "EQEmu Patcher.sln"

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        cd "EQEmu Patcher" && msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:VERSION="${{ env.VERSION }}.${{ github.run_number }}" /p:FILELIST_URL=${{env.FILELIST_URL}} /p:SERVER_NAME="${{env.SERVER_NAME}}" /p:FILE_NAME="${{env.FILE_NAME}}" "EQEmu Patcher.sln"

    - name: Verify build output
      shell: pwsh
      run: |
        Write-Host "Checking Release directory contents:"
        Get-ChildItem -Path "${{env.BUILD_PATH}}" -Recurse | ForEach-Object {
            Write-Host $_.FullName
        }
        
        # Create a copy of the executable with the correct name
        $sourceExe = Get-ChildItem -Path "${{env.BUILD_PATH}}" -Filter "TestingName.exe" | Select-Object -First 1
        if ($sourceExe) {
            Write-Host "Found executable: $($sourceExe.Name)"
            Copy-Item -Path $sourceExe.FullName -Destination "${{env.BUILD_PATH}}\${{env.FILE_NAME}}.exe" -Force
        } else {
            Write-Host "No executable found in Release directory!"
            Get-ChildItem -Path "${{env.BUILD_PATH}}" -Filter "*.exe"
            exit 1
        }

    - name: Generate filelist
      shell: pwsh
      run: |
        Set-Location -Path "rof"
        Invoke-WebRequest -Uri "https://github.com/xackery/filelistbuilder/releases/latest/download/filelistbuilder-win-x64.exe" -OutFile "filelistbuilder-win-x64.exe"
        
        Write-Host "Verifying executable exists:"
        if (Test-Path "..\${{env.BUILD_PATH}}\${{env.FILE_NAME}}.exe") {
            Write-Host "${{env.FILE_NAME}}.exe found"
        } else {
            Write-Host "${{env.FILE_NAME}}.exe not found!"
            exit 1
        }
        
        .\filelistbuilder-win-x64.exe "rof" "${{env.STORAGE_URL}}" "..\${{env.BUILD_PATH}}\${{env.FILE_NAME}}.exe"
        Move-Item "eqemupatcher-hash.txt" "${{env.FILE_NAME}}-hash.txt" -Force
  
    - name: Release
      uses: "marvinpinto/action-automatic-releases@latest"
      if: github.ref == 'refs/heads/master'
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "${{ env.VERSION }}.${{ github.run_number }}"
        prerelease: false
        title: "${{ env.VERSION }}.${{ github.run_number }}"
        files: |
          ${{env.BUILD_PATH}}/${{env.FILE_NAME}}.exe
          rof/filelist_rof.yml
          rof/${{env.FILE_NAME}}-hash.txt
          manifest.json
